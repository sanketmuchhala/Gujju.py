name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test,dev]"

    - name: Lint with ruff
      run: |
        ruff check kemlang tests
        ruff format --check kemlang tests

    - name: Format check with black
      run: |
        black --check kemlang tests

    - name: Type check with mypy
      run: |
        mypy kemlang

    - name: Test with pytest
      run: |
        pytest --cov=kemlang --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  integration-test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Install from wheel
      run: |
        pip install dist/*.whl

    - name: Test CLI installation
      run: |
        kem version
        echo "kem bhai\nbhai bol \"CLI works!\"\naavjo bhai" > test.kem
        kem run-file test.kem

    - name: Test examples
      run: |
        cd examples
        kem run-file hello.kem < <(echo "Test User")
        kem run-file loop_and_if.kem
        # errors.kem should fail
        ! kem run-file errors.kem

    - name: Test formatter
      run: |
        cd examples
        kem fmt --check *.kem || true  # May not be formatted
        kem fmt *.kem
        kem fmt --check *.kem  # Should pass after formatting